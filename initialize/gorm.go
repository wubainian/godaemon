package initialize

import (
	"os"

	"github.com/wubainian/godaemon/global"
	"go.uber.org/zap"
	"gorm.io/gorm"
)

// Gorm 初始化数据库并产生数据库全局变量
// Author SliverHorn
func Gorm() *gorm.DB {
	switch global.GVA_CONFIG.System.DbType {
	case "mysql":
		return GormMysql()
	case "pgsql":
		return GormPgSql()
	case "oracle":
		return GormOracle()
	case "mssql":
		return GormMssql()
	default:
		return GormMysql()
	}
}

// RegisterTables 注册数据库表专用
// Author SliverHorn
func RegisterTables(db *gorm.DB) {
	//获取列表
	var registerTableList []interface{}
	for _, ifs := range gRegisterTables {
		registerTableList = append(registerTableList, ifs.ProvideRegisterTable()...)
	}

	err := db.AutoMigrate(
		// 自动化模块表
		// Code generated by github.com/flipped-aurora/gin-vue-admin/server Begin; DO NOT EDIT.
		registerTableList...,
	// Code generated by github.com/flipped-aurora/gin-vue-admin/server End; DO NOT EDIT.
	)
	if err != nil {
		global.GVA_LOG.Error("register table failed", zap.Error(err))
		os.Exit(0)
	}
	global.GVA_LOG.Info("register table success")
}

var (
	gRegisterTables []RegisterTableProvider
)

type RegisterTableProvider interface {
	ProvideRegisterTable() []interface{}
}

func AddRegisterTableProvider(p RegisterTableProvider) {
	gRegisterTables = append(gRegisterTables, p)
}
